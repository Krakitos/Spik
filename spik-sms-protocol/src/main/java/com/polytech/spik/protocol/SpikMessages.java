// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package com.polytech.spik.protocol;

public final class SpikMessages {
  public static final int MIMETYPE_FIELD_NUMBER = 100;
  /**
   * <code>extend .Sms { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.polytech.spik.protocol.SpikMessages.Sms,
      java.lang.String> mimeType = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        java.lang.String.class,
        null);
  public static final int DATA_FIELD_NUMBER = 101;
  /**
   * <code>extend .Sms { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.polytech.spik.protocol.SpikMessages.Sms,
      com.google.protobuf.ByteString> data = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        com.google.protobuf.ByteString.class,
        null);
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Wrapper_descriptor;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Contact_descriptor;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Conversation_descriptor;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Sms_descriptor;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SendMessage_descriptor;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_StatusChanged_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Wrapper_fieldAccessorTable;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Contact_fieldAccessorTable;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Conversation_fieldAccessorTable;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Sms_fieldAccessorTable;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SendMessage_fieldAccessorTable;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_StatusChanged_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;

  static {
    java.lang.String[] descriptorData = {
      "\n\rservice.proto\"\270\001\n\007Wrapper\022\033\n\007contact\030\001" +
      " \001(\0132\010.ContactH\000\022%\n\014conversation\030\002 \001(\0132\r" +
      ".ConversationH\000\022\023\n\003sms\030\003 \001(\0132\004.SmsH\000\022#\n\013" +
      "sendMessage\030\004 \001(\0132\014.SendMessageH\000\022\'\n\rsta" +
      "tusChanged\030\005 \001(\0132\016.StatusChangedH\000B\006\n\004ty" +
      "pe\"C\n\007Contact\022\n\n\002id\030\001 \002(\003\022\014\n\004name\030\002 \002(\t\022" +
      "\r\n\005phone\030\003 \001(\t\022\017\n\007picture\030\004 \001(\014\"H\n\014Conve" +
      "rsation\022\n\n\002id\030\001 \002(\003\022\024\n\014participants\030\002 \003(" +
      "\003\022\026\n\010messages\030\003 \003(\0132\004.Sms\"a\n\003Sms\022\020\n\010thre" +
      "adId\030\001 \001(\003\022\014\n\004date\030\002 \002(\003\022\014\n\004text\030\003 \002(\t\022\014",
      "\n\004read\030\004 \002(\010\022\027\n\006status\030\005 \002(\0162\007.Status*\005\010" +
      "d\020\310\001\"^\n\013SendMessage\022\013\n\003mid\030\001 \002(\003\022\024\n\014part" +
      "icipants\030\002 \003(\t\022\014\n\004text\030\003 \002(\t\022\020\n\010mimeType" +
      "\030\004 \001(\t\022\014\n\004data\030\005 \001(\014\"5\n\rStatusChanged\022\013\n" +
      "\003mid\030\001 \002(\003\022\027\n\006status\030\002 \002(\0162\007.Status*7\n\006S" +
      "tatus\022\013\n\007SENDING\020\001\022\010\n\004SENT\020\002\022\014\n\010NOT_READ" +
      "\020\003\022\010\n\004READ\020\004*a\n\021MessageIdentifier\022\013\n\007CON" +
      "TACT\020\001\022\020\n\014CONVERSATION\020\002\022\007\n\003SMS\020\003\022\020\n\014SEN" +
      "D_MESSAGE\020\004\022\022\n\016STATUS_CHANGED\020\005:\026\n\010mimeT" +
      "ype\022\004.Sms\030d \001(\t:\022\n\004data\022\004.Sms\030e \001(\014B*\n\032c",
      "om.polytech.spik.protocolB\014SpikMessages"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Wrapper_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Wrapper_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Wrapper_descriptor,
        new java.lang.String[] { "Contact", "Conversation", "Sms", "SendMessage", "StatusChanged", "Type", });
    internal_static_Contact_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Contact_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Contact_descriptor,
        new java.lang.String[] { "Id", "Name", "Phone", "Picture", });
    internal_static_Conversation_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Conversation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Conversation_descriptor,
        new java.lang.String[] { "Id", "Participants", "Messages", });
    internal_static_Sms_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Sms_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Sms_descriptor,
        new java.lang.String[] { "ThreadId", "Date", "Text", "Read", "Status", });
    internal_static_SendMessage_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_SendMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SendMessage_descriptor,
        new java.lang.String[] { "Mid", "Participants", "Text", "MimeType", "Data", });
    internal_static_StatusChanged_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_StatusChanged_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_StatusChanged_descriptor,
        new java.lang.String[] { "Mid", "Status", });
    mimeType.internalInit(descriptor.getExtensions().get(0));
    data.internalInit(descriptor.getExtensions().get(1));
  }
  private SpikMessages() {}

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registry.add(com.polytech.spik.protocol.SpikMessages.mimeType);
    registry.add(com.polytech.spik.protocol.SpikMessages.data);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  /**
   * Protobuf enum {@code Status}
   */
  public enum Status
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SENDING = 1;</code>
     */
    SENDING(0, 1),
    /**
     * <code>SENT = 2;</code>
     */
    SENT(1, 2),
    /**
     * <code>NOT_READ = 3;</code>
     */
    NOT_READ(2, 3),
    /**
     * <code>READ = 4;</code>
     */
    READ(3, 4),
    ;

    /**
     * <code>SENDING = 1;</code>
     */
    public static final int SENDING_VALUE = 1;
    /**
     * <code>SENT = 2;</code>
     */
    public static final int SENT_VALUE = 2;
    /**
     * <code>NOT_READ = 3;</code>
     */
    public static final int NOT_READ_VALUE = 3;
    /**
     * <code>READ = 4;</code>
     */
    public static final int READ_VALUE = 4;
    private static final Status[] VALUES = values();
    private static com.google.protobuf.Internal.EnumLiteMap<Status>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Status>() {
            public Status findValueByNumber(int number) {
              return Status.valueOf(number);
            }
          };
    private final int index;
    private final int value;

    private Status(int index, int value) {
      this.index = index;
      this.value = value;
    }

    public static Status valueOf(int value) {
      switch (value) {
        case 1: return SENDING;
        case 2: return SENT;
        case 3: return NOT_READ;
        case 4: return READ;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Status>
        internalGetValueMap() {
      return internalValueMap;
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.polytech.spik.protocol.SpikMessages.getDescriptor().getEnumTypes().get(0);
    }

    public static Status valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    public final int getNumber() { return value; }

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }

    // @@protoc_insertion_point(enum_scope:Status)
  }
  /**
   * Protobuf enum {@code MessageIdentifier}
   */
  public enum MessageIdentifier
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CONTACT = 1;</code>
     */
    CONTACT(0, 1),
    /**
     * <code>CONVERSATION = 2;</code>
     */
    CONVERSATION(1, 2),
    /**
     * <code>SMS = 3;</code>
     */
    SMS(2, 3),
    /**
     * <code>SEND_MESSAGE = 4;</code>
     */
    SEND_MESSAGE(3, 4),
    /**
     * <code>STATUS_CHANGED = 5;</code>
     */
    STATUS_CHANGED(4, 5),
    ;

    /**
     * <code>CONTACT = 1;</code>
     */
    public static final int CONTACT_VALUE = 1;
    /**
     * <code>CONVERSATION = 2;</code>
     */
    public static final int CONVERSATION_VALUE = 2;
    /**
     * <code>SMS = 3;</code>
     */
    public static final int SMS_VALUE = 3;
    /**
     * <code>SEND_MESSAGE = 4;</code>
     */
    public static final int SEND_MESSAGE_VALUE = 4;
    /**
     * <code>STATUS_CHANGED = 5;</code>
     */
    public static final int STATUS_CHANGED_VALUE = 5;
    private static final MessageIdentifier[] VALUES = values();
    private static com.google.protobuf.Internal.EnumLiteMap<MessageIdentifier>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageIdentifier>() {
            public MessageIdentifier findValueByNumber(int number) {
              return MessageIdentifier.valueOf(number);
            }
          };
    private final int index;
    private final int value;

    private MessageIdentifier(int index, int value) {
      this.index = index;
      this.value = value;
    }

    public static MessageIdentifier valueOf(int value) {
      switch (value) {
        case 1: return CONTACT;
        case 2: return CONVERSATION;
        case 3: return SMS;
        case 4: return SEND_MESSAGE;
        case 5: return STATUS_CHANGED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessageIdentifier>
        internalGetValueMap() {
      return internalValueMap;
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.polytech.spik.protocol.SpikMessages.getDescriptor().getEnumTypes().get(1);
    }

    public static MessageIdentifier valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    public final int getNumber() { return value; }

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }

    // @@protoc_insertion_point(enum_scope:MessageIdentifier)
  }
  public interface WrapperOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Wrapper)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .Contact contact = 1;</code>
     */
    boolean hasContact();
    /**
     * <code>optional .Contact contact = 1;</code>
     */
    com.polytech.spik.protocol.SpikMessages.Contact getContact();
    /**
     * <code>optional .Contact contact = 1;</code>
     */
    com.polytech.spik.protocol.SpikMessages.ContactOrBuilder getContactOrBuilder();

    /**
     * <code>optional .Conversation conversation = 2;</code>
     */
    boolean hasConversation();
    /**
     * <code>optional .Conversation conversation = 2;</code>
     */
    com.polytech.spik.protocol.SpikMessages.Conversation getConversation();
    /**
     * <code>optional .Conversation conversation = 2;</code>
     */
    com.polytech.spik.protocol.SpikMessages.ConversationOrBuilder getConversationOrBuilder();

    /**
     * <code>optional .Sms sms = 3;</code>
     */
    boolean hasSms();
    /**
     * <code>optional .Sms sms = 3;</code>
     */
    com.polytech.spik.protocol.SpikMessages.Sms getSms();
    /**
     * <code>optional .Sms sms = 3;</code>
     */
    com.polytech.spik.protocol.SpikMessages.SmsOrBuilder getSmsOrBuilder();

    /**
     * <code>optional .SendMessage sendMessage = 4;</code>
     */
    boolean hasSendMessage();
    /**
     * <code>optional .SendMessage sendMessage = 4;</code>
     */
    com.polytech.spik.protocol.SpikMessages.SendMessage getSendMessage();
    /**
     * <code>optional .SendMessage sendMessage = 4;</code>
     */
    com.polytech.spik.protocol.SpikMessages.SendMessageOrBuilder getSendMessageOrBuilder();

    /**
     * <code>optional .StatusChanged statusChanged = 5;</code>
     */
    boolean hasStatusChanged();
    /**
     * <code>optional .StatusChanged statusChanged = 5;</code>
     */
    com.polytech.spik.protocol.SpikMessages.StatusChanged getStatusChanged();
    /**
     * <code>optional .StatusChanged statusChanged = 5;</code>
     */
    com.polytech.spik.protocol.SpikMessages.StatusChangedOrBuilder getStatusChangedOrBuilder();
  }
  public interface ContactOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Contact)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required int64 id = 1;</code>
     */
    long getId();

    /**
     * <code>required string name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional string phone = 3;</code>
     */
    boolean hasPhone();
    /**
     * <code>optional string phone = 3;</code>
     */
    java.lang.String getPhone();
    /**
     * <code>optional string phone = 3;</code>
     */
    com.google.protobuf.ByteString
        getPhoneBytes();

    /**
     * <code>optional bytes picture = 4;</code>
     */
    boolean hasPicture();
    /**
     * <code>optional bytes picture = 4;</code>
     */
    com.google.protobuf.ByteString getPicture();
  }
  public interface ConversationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Conversation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required int64 id = 1;</code>
     */
    long getId();

    /**
     * <code>repeated int64 participants = 2;</code>
     */
    java.util.List<java.lang.Long> getParticipantsList();
    /**
     * <code>repeated int64 participants = 2;</code>
     */
    int getParticipantsCount();
    /**
     * <code>repeated int64 participants = 2;</code>
     */
    long getParticipants(int index);

    /**
     * <code>repeated .Sms messages = 3;</code>
     */
    java.util.List<com.polytech.spik.protocol.SpikMessages.Sms>
        getMessagesList();
    /**
     * <code>repeated .Sms messages = 3;</code>
     */
    com.polytech.spik.protocol.SpikMessages.Sms getMessages(int index);
    /**
     * <code>repeated .Sms messages = 3;</code>
     */
    int getMessagesCount();
    /**
     * <code>repeated .Sms messages = 3;</code>
     */
    java.util.List<? extends com.polytech.spik.protocol.SpikMessages.SmsOrBuilder>
        getMessagesOrBuilderList();
    /**
     * <code>repeated .Sms messages = 3;</code>
     */
    com.polytech.spik.protocol.SpikMessages.SmsOrBuilder getMessagesOrBuilder(
        int index);
  }
  public interface SmsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Sms)
      com.google.protobuf.GeneratedMessage.
          ExtendableMessageOrBuilder<Sms> {

    /**
     * <code>optional int64 threadId = 1;</code>
     */
    boolean hasThreadId();
    /**
     * <code>optional int64 threadId = 1;</code>
     */
    long getThreadId();

    /**
     * <code>required int64 date = 2;</code>
     */
    boolean hasDate();
    /**
     * <code>required int64 date = 2;</code>
     */
    long getDate();

    /**
     * <code>required string text = 3;</code>
     */
    boolean hasText();
    /**
     * <code>required string text = 3;</code>
     */
    java.lang.String getText();
    /**
     * <code>required string text = 3;</code>
     */
    com.google.protobuf.ByteString
        getTextBytes();

    /**
     * <code>required bool read = 4;</code>
     */
    boolean hasRead();
    /**
     * <code>required bool read = 4;</code>
     */
    boolean getRead();

    /**
     * <code>required .Status status = 5;</code>
     */
    boolean hasStatus();
    /**
     * <code>required .Status status = 5;</code>
     */
    com.polytech.spik.protocol.SpikMessages.Status getStatus();
  }
  public interface SendMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SendMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 mid = 1;</code>
     */
    boolean hasMid();
    /**
     * <code>required int64 mid = 1;</code>
     */
    long getMid();

    /**
     * <code>repeated string participants = 2;</code>
     */
    com.google.protobuf.ProtocolStringList
        getParticipantsList();
    /**
     * <code>repeated string participants = 2;</code>
     */
    int getParticipantsCount();
    /**
     * <code>repeated string participants = 2;</code>
     */
    java.lang.String getParticipants(int index);
    /**
     * <code>repeated string participants = 2;</code>
     */
    com.google.protobuf.ByteString
        getParticipantsBytes(int index);

    /**
     * <code>required string text = 3;</code>
     */
    boolean hasText();
    /**
     * <code>required string text = 3;</code>
     */
    java.lang.String getText();
    /**
     * <code>required string text = 3;</code>
     */
    com.google.protobuf.ByteString
        getTextBytes();

    /**
     * <code>optional string mimeType = 4;</code>
     */
    boolean hasMimeType();
    /**
     * <code>optional string mimeType = 4;</code>
     */
    java.lang.String getMimeType();
    /**
     * <code>optional string mimeType = 4;</code>
     */
    com.google.protobuf.ByteString
        getMimeTypeBytes();

    /**
     * <code>optional bytes data = 5;</code>
     */
    boolean hasData();
    /**
     * <code>optional bytes data = 5;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  public interface StatusChangedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:StatusChanged)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 mid = 1;</code>
     */
    boolean hasMid();
    /**
     * <code>required int64 mid = 1;</code>
     */
    long getMid();

    /**
     * <code>required .Status status = 2;</code>
     */
    boolean hasStatus();
    /**
     * <code>required .Status status = 2;</code>
     */
    com.polytech.spik.protocol.SpikMessages.Status getStatus();
  }

  /**
   * Protobuf type {@code Wrapper}
   */
  public static final class Wrapper extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Wrapper)
      WrapperOrBuilder {
    public static final int CONTACT_FIELD_NUMBER = 1;
    public static final int CONVERSATION_FIELD_NUMBER = 2;
    public static final int SMS_FIELD_NUMBER = 3;
    public static final int SENDMESSAGE_FIELD_NUMBER = 4;
    public static final int STATUSCHANGED_FIELD_NUMBER = 5;
    private static final Wrapper defaultInstance;
    private static final long serialVersionUID = 0L;
    public static com.google.protobuf.Parser<Wrapper> PARSER =
        new com.google.protobuf.AbstractParser<Wrapper>() {
      public Wrapper parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Wrapper(input, extensionRegistry);
      }
    };

    static {
      defaultInstance = new Wrapper(true);
      defaultInstance.initFields();
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    private int bitField0_;
    private int typeCase_ = 0;
    private java.lang.Object type_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
        // Use Wrapper.newBuilder() to construct.
    private Wrapper(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    };

    private Wrapper(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private Wrapper(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.polytech.spik.protocol.SpikMessages.Contact.Builder subBuilder = null;
              if (typeCase_ == 1) {
                subBuilder = ((com.polytech.spik.protocol.SpikMessages.Contact) type_).toBuilder();
              }
              type_ = input.readMessage(com.polytech.spik.protocol.SpikMessages.Contact.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.polytech.spik.protocol.SpikMessages.Contact) type_);
                type_ = subBuilder.buildPartial();
              }
              typeCase_ = 1;
              break;
            }
            case 18: {
              com.polytech.spik.protocol.SpikMessages.Conversation.Builder subBuilder = null;
              if (typeCase_ == 2) {
                subBuilder = ((com.polytech.spik.protocol.SpikMessages.Conversation) type_).toBuilder();
              }
              type_ = input.readMessage(com.polytech.spik.protocol.SpikMessages.Conversation.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.polytech.spik.protocol.SpikMessages.Conversation) type_);
                type_ = subBuilder.buildPartial();
              }
              typeCase_ = 2;
              break;
            }
            case 26: {
              com.polytech.spik.protocol.SpikMessages.Sms.Builder subBuilder = null;
              if (typeCase_ == 3) {
                subBuilder = ((com.polytech.spik.protocol.SpikMessages.Sms) type_).toBuilder();
              }
              type_ = input.readMessage(com.polytech.spik.protocol.SpikMessages.Sms.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.polytech.spik.protocol.SpikMessages.Sms) type_);
                type_ = subBuilder.buildPartial();
              }
              typeCase_ = 3;
              break;
            }
            case 34: {
              com.polytech.spik.protocol.SpikMessages.SendMessage.Builder subBuilder = null;
              if (typeCase_ == 4) {
                subBuilder = ((com.polytech.spik.protocol.SpikMessages.SendMessage) type_).toBuilder();
              }
              type_ = input.readMessage(com.polytech.spik.protocol.SpikMessages.SendMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.polytech.spik.protocol.SpikMessages.SendMessage) type_);
                type_ = subBuilder.buildPartial();
              }
              typeCase_ = 4;
              break;
            }
            case 42: {
              com.polytech.spik.protocol.SpikMessages.StatusChanged.Builder subBuilder = null;
              if (typeCase_ == 5) {
                subBuilder = ((com.polytech.spik.protocol.SpikMessages.StatusChanged) type_).toBuilder();
              }
              type_ = input.readMessage(com.polytech.spik.protocol.SpikMessages.StatusChanged.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.polytech.spik.protocol.SpikMessages.StatusChanged) type_);
                type_ = subBuilder.buildPartial();
              }
              typeCase_ = 5;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static Wrapper getDefaultInstance() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.polytech.spik.protocol.SpikMessages.internal_static_Wrapper_descriptor;
    }

    public static com.polytech.spik.protocol.SpikMessages.Wrapper parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.polytech.spik.protocol.SpikMessages.Wrapper parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.Wrapper parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.polytech.spik.protocol.SpikMessages.Wrapper parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.Wrapper parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static com.polytech.spik.protocol.SpikMessages.Wrapper parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.Wrapper parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }

    public static com.polytech.spik.protocol.SpikMessages.Wrapper parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.Wrapper parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static com.polytech.spik.protocol.SpikMessages.Wrapper parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }

    public static Builder newBuilder(com.polytech.spik.protocol.SpikMessages.Wrapper prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Wrapper getDefaultInstanceForType() {
      return defaultInstance;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.polytech.spik.protocol.SpikMessages.internal_static_Wrapper_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.polytech.spik.protocol.SpikMessages.Wrapper.class, com.polytech.spik.protocol.SpikMessages.Wrapper.Builder.class);
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Wrapper> getParserForType() {
      return PARSER;
    }

    public TypeCase
    getTypeCase() {
      return TypeCase.valueOf(
          typeCase_);
    }

    /**
     * <code>optional .Contact contact = 1;</code>
     */
    public boolean hasContact() {
      return typeCase_ == 1;
    }

    /**
     * <code>optional .Contact contact = 1;</code>
     */
    public com.polytech.spik.protocol.SpikMessages.Contact getContact() {
      if (typeCase_ == 1) {
         return (com.polytech.spik.protocol.SpikMessages.Contact) type_;
      }
      return com.polytech.spik.protocol.SpikMessages.Contact.getDefaultInstance();
    }

    /**
     * <code>optional .Contact contact = 1;</code>
     */
    public com.polytech.spik.protocol.SpikMessages.ContactOrBuilder getContactOrBuilder() {
      if (typeCase_ == 1) {
         return (com.polytech.spik.protocol.SpikMessages.Contact) type_;
      }
      return com.polytech.spik.protocol.SpikMessages.Contact.getDefaultInstance();
    }

    /**
     * <code>optional .Conversation conversation = 2;</code>
     */
    public boolean hasConversation() {
      return typeCase_ == 2;
    }

    /**
     * <code>optional .Conversation conversation = 2;</code>
     */
    public com.polytech.spik.protocol.SpikMessages.Conversation getConversation() {
      if (typeCase_ == 2) {
         return (com.polytech.spik.protocol.SpikMessages.Conversation) type_;
      }
      return com.polytech.spik.protocol.SpikMessages.Conversation.getDefaultInstance();
    }

    /**
     * <code>optional .Conversation conversation = 2;</code>
     */
    public com.polytech.spik.protocol.SpikMessages.ConversationOrBuilder getConversationOrBuilder() {
      if (typeCase_ == 2) {
         return (com.polytech.spik.protocol.SpikMessages.Conversation) type_;
      }
      return com.polytech.spik.protocol.SpikMessages.Conversation.getDefaultInstance();
    }

    /**
     * <code>optional .Sms sms = 3;</code>
     */
    public boolean hasSms() {
      return typeCase_ == 3;
    }

    /**
     * <code>optional .Sms sms = 3;</code>
     */
    public com.polytech.spik.protocol.SpikMessages.Sms getSms() {
      if (typeCase_ == 3) {
         return (com.polytech.spik.protocol.SpikMessages.Sms) type_;
      }
      return com.polytech.spik.protocol.SpikMessages.Sms.getDefaultInstance();
    }

    /**
     * <code>optional .Sms sms = 3;</code>
     */
    public com.polytech.spik.protocol.SpikMessages.SmsOrBuilder getSmsOrBuilder() {
      if (typeCase_ == 3) {
         return (com.polytech.spik.protocol.SpikMessages.Sms) type_;
      }
      return com.polytech.spik.protocol.SpikMessages.Sms.getDefaultInstance();
    }

    /**
     * <code>optional .SendMessage sendMessage = 4;</code>
     */
    public boolean hasSendMessage() {
      return typeCase_ == 4;
    }

    /**
     * <code>optional .SendMessage sendMessage = 4;</code>
     */
    public com.polytech.spik.protocol.SpikMessages.SendMessage getSendMessage() {
      if (typeCase_ == 4) {
         return (com.polytech.spik.protocol.SpikMessages.SendMessage) type_;
      }
      return com.polytech.spik.protocol.SpikMessages.SendMessage.getDefaultInstance();
    }

    /**
     * <code>optional .SendMessage sendMessage = 4;</code>
     */
    public com.polytech.spik.protocol.SpikMessages.SendMessageOrBuilder getSendMessageOrBuilder() {
      if (typeCase_ == 4) {
         return (com.polytech.spik.protocol.SpikMessages.SendMessage) type_;
      }
      return com.polytech.spik.protocol.SpikMessages.SendMessage.getDefaultInstance();
    }

    /**
     * <code>optional .StatusChanged statusChanged = 5;</code>
     */
    public boolean hasStatusChanged() {
      return typeCase_ == 5;
    }

    /**
     * <code>optional .StatusChanged statusChanged = 5;</code>
     */
    public com.polytech.spik.protocol.SpikMessages.StatusChanged getStatusChanged() {
      if (typeCase_ == 5) {
         return (com.polytech.spik.protocol.SpikMessages.StatusChanged) type_;
      }
      return com.polytech.spik.protocol.SpikMessages.StatusChanged.getDefaultInstance();
    }

    /**
     * <code>optional .StatusChanged statusChanged = 5;</code>
     */
    public com.polytech.spik.protocol.SpikMessages.StatusChangedOrBuilder getStatusChangedOrBuilder() {
      if (typeCase_ == 5) {
         return (com.polytech.spik.protocol.SpikMessages.StatusChanged) type_;
      }
      return com.polytech.spik.protocol.SpikMessages.StatusChanged.getDefaultInstance();
    }

    private void initFields() {
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasContact()) {
        if (!getContact().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasConversation()) {
        if (!getConversation().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSms()) {
        if (!getSms().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSendMessage()) {
        if (!getSendMessage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasStatusChanged()) {
        if (!getStatusChanged().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (typeCase_ == 1) {
        output.writeMessage(1, (com.polytech.spik.protocol.SpikMessages.Contact) type_);
      }
      if (typeCase_ == 2) {
        output.writeMessage(2, (com.polytech.spik.protocol.SpikMessages.Conversation) type_);
      }
      if (typeCase_ == 3) {
        output.writeMessage(3, (com.polytech.spik.protocol.SpikMessages.Sms) type_);
      }
      if (typeCase_ == 4) {
        output.writeMessage(4, (com.polytech.spik.protocol.SpikMessages.SendMessage) type_);
      }
      if (typeCase_ == 5) {
        output.writeMessage(5, (com.polytech.spik.protocol.SpikMessages.StatusChanged) type_);
      }
      getUnknownFields().writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (typeCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.polytech.spik.protocol.SpikMessages.Contact) type_);
      }
      if (typeCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.polytech.spik.protocol.SpikMessages.Conversation) type_);
      }
      if (typeCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.polytech.spik.protocol.SpikMessages.Sms) type_);
      }
      if (typeCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (com.polytech.spik.protocol.SpikMessages.SendMessage) type_);
      }
      if (typeCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (com.polytech.spik.protocol.SpikMessages.StatusChanged) type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public Builder newBuilderForType() { return newBuilder(); }

    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
public enum TypeCase
        implements com.google.protobuf.Internal.EnumLite {
      CONTACT(1),
      CONVERSATION(2),
      SMS(3),
      SENDMESSAGE(4),
      STATUSCHANGED(5),
      TYPE_NOT_SET(0);
      private int value = 0;
      private TypeCase(int value) {
        this.value = value;
      }
      public static TypeCase valueOf(int value) {
        switch (value) {
          case 1: return CONTACT;
          case 2: return CONVERSATION;
          case 3: return SMS;
          case 4: return SENDMESSAGE;
          case 5: return STATUSCHANGED;
          case 0: return TYPE_NOT_SET;
          default: throw new java.lang.IllegalArgumentException(
            "Value is undefined for this oneof enum.");
        }
      }
      public int getNumber() {
        return this.value;
      }
    }

    /**
     * Protobuf type {@code Wrapper}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Wrapper)
        com.polytech.spik.protocol.SpikMessages.WrapperOrBuilder {
      private int typeCase_ = 0;
      private java.lang.Object type_;
      private int bitField0_;
      private com.google.protobuf.SingleFieldBuilder<
          com.polytech.spik.protocol.SpikMessages.Contact, com.polytech.spik.protocol.SpikMessages.Contact.Builder, com.polytech.spik.protocol.SpikMessages.ContactOrBuilder> contactBuilder_;
      private com.google.protobuf.SingleFieldBuilder<
          com.polytech.spik.protocol.SpikMessages.Conversation, com.polytech.spik.protocol.SpikMessages.Conversation.Builder, com.polytech.spik.protocol.SpikMessages.ConversationOrBuilder> conversationBuilder_;
      private com.google.protobuf.SingleFieldBuilder<
          com.polytech.spik.protocol.SpikMessages.Sms, com.polytech.spik.protocol.SpikMessages.Sms.Builder, com.polytech.spik.protocol.SpikMessages.SmsOrBuilder> smsBuilder_;
      private com.google.protobuf.SingleFieldBuilder<
          com.polytech.spik.protocol.SpikMessages.SendMessage, com.polytech.spik.protocol.SpikMessages.SendMessage.Builder, com.polytech.spik.protocol.SpikMessages.SendMessageOrBuilder> sendMessageBuilder_;
      private com.google.protobuf.SingleFieldBuilder<
          com.polytech.spik.protocol.SpikMessages.StatusChanged, com.polytech.spik.protocol.SpikMessages.StatusChanged.Builder, com.polytech.spik.protocol.SpikMessages.StatusChangedOrBuilder> statusChangedBuilder_;

      // Construct using com.polytech.spik.protocol.SpikMessages.Wrapper.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.polytech.spik.protocol.SpikMessages.internal_static_Wrapper_descriptor;
      }

      private static Builder create() {
        return new Builder();
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.polytech.spik.protocol.SpikMessages.internal_static_Wrapper_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.polytech.spik.protocol.SpikMessages.Wrapper.class, com.polytech.spik.protocol.SpikMessages.Wrapper.Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        typeCase_ = 0;
        type_ = null;
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.polytech.spik.protocol.SpikMessages.internal_static_Wrapper_descriptor;
      }

      public com.polytech.spik.protocol.SpikMessages.Wrapper getDefaultInstanceForType() {
        return com.polytech.spik.protocol.SpikMessages.Wrapper.getDefaultInstance();
      }

      public com.polytech.spik.protocol.SpikMessages.Wrapper build() {
        com.polytech.spik.protocol.SpikMessages.Wrapper result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.polytech.spik.protocol.SpikMessages.Wrapper buildPartial() {
        com.polytech.spik.protocol.SpikMessages.Wrapper result = new com.polytech.spik.protocol.SpikMessages.Wrapper(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (typeCase_ == 1) {
          if (contactBuilder_ == null) {
            result.type_ = type_;
          } else {
            result.type_ = contactBuilder_.build();
          }
        }
        if (typeCase_ == 2) {
          if (conversationBuilder_ == null) {
            result.type_ = type_;
          } else {
            result.type_ = conversationBuilder_.build();
          }
        }
        if (typeCase_ == 3) {
          if (smsBuilder_ == null) {
            result.type_ = type_;
          } else {
            result.type_ = smsBuilder_.build();
          }
        }
        if (typeCase_ == 4) {
          if (sendMessageBuilder_ == null) {
            result.type_ = type_;
          } else {
            result.type_ = sendMessageBuilder_.build();
          }
        }
        if (typeCase_ == 5) {
          if (statusChangedBuilder_ == null) {
            result.type_ = type_;
          } else {
            result.type_ = statusChangedBuilder_.build();
          }
        }
        result.bitField0_ = to_bitField0_;
        result.typeCase_ = typeCase_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.polytech.spik.protocol.SpikMessages.Wrapper) {
          return mergeFrom((com.polytech.spik.protocol.SpikMessages.Wrapper)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.polytech.spik.protocol.SpikMessages.Wrapper other) {
        if (other == com.polytech.spik.protocol.SpikMessages.Wrapper.getDefaultInstance()) return this;
        switch (other.getTypeCase()) {
          case CONTACT: {
            mergeContact(other.getContact());
            break;
          }
          case CONVERSATION: {
            mergeConversation(other.getConversation());
            break;
          }
          case SMS: {
            mergeSms(other.getSms());
            break;
          }
          case SENDMESSAGE: {
            mergeSendMessage(other.getSendMessage());
            break;
          }
          case STATUSCHANGED: {
            mergeStatusChanged(other.getStatusChanged());
            break;
          }
          case TYPE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasContact()) {
          if (!getContact().isInitialized()) {

            return false;
          }
        }
        if (hasConversation()) {
          if (!getConversation().isInitialized()) {

            return false;
          }
        }
        if (hasSms()) {
          if (!getSms().isInitialized()) {

            return false;
          }
        }
        if (hasSendMessage()) {
          if (!getSendMessage().isInitialized()) {

            return false;
          }
        }
        if (hasStatusChanged()) {
          if (!getStatusChanged().isInitialized()) {

            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.polytech.spik.protocol.SpikMessages.Wrapper parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.polytech.spik.protocol.SpikMessages.Wrapper) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      public TypeCase
          getTypeCase() {
        return TypeCase.valueOf(
            typeCase_);
      }

      public Builder clearType() {
        typeCase_ = 0;
        type_ = null;
        onChanged();
        return this;
      }

      /**
       * <code>optional .Contact contact = 1;</code>
       */
      public boolean hasContact() {
        return typeCase_ == 1;
      }

      /**
       * <code>optional .Contact contact = 1;</code>
       */
      public com.polytech.spik.protocol.SpikMessages.Contact getContact() {
        if (contactBuilder_ == null) {
          if (typeCase_ == 1) {
            return (com.polytech.spik.protocol.SpikMessages.Contact) type_;
          }
          return com.polytech.spik.protocol.SpikMessages.Contact.getDefaultInstance();
        } else {
          if (typeCase_ == 1) {
            return contactBuilder_.getMessage();
          }
          return com.polytech.spik.protocol.SpikMessages.Contact.getDefaultInstance();
        }
      }

      /**
       * <code>optional .Contact contact = 1;</code>
       */
      public Builder setContact(
          com.polytech.spik.protocol.SpikMessages.Contact.Builder builderForValue) {
        if (contactBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          contactBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 1;
        return this;
      }

      /**
       * <code>optional .Contact contact = 1;</code>
       */
      public Builder setContact(com.polytech.spik.protocol.SpikMessages.Contact value) {
        if (contactBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          contactBuilder_.setMessage(value);
        }
        typeCase_ = 1;
        return this;
      }

      /**
       * <code>optional .Contact contact = 1;</code>
       */
      public Builder mergeContact(com.polytech.spik.protocol.SpikMessages.Contact value) {
        if (contactBuilder_ == null) {
          if (typeCase_ == 1 &&
              type_ != com.polytech.spik.protocol.SpikMessages.Contact.getDefaultInstance()) {
            type_ = com.polytech.spik.protocol.SpikMessages.Contact.newBuilder((com.polytech.spik.protocol.SpikMessages.Contact) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 1) {
            contactBuilder_.mergeFrom(value);
          }
          contactBuilder_.setMessage(value);
        }
        typeCase_ = 1;
        return this;
      }

      /**
       * <code>optional .Contact contact = 1;</code>
       */
      public Builder clearContact() {
        if (contactBuilder_ == null) {
          if (typeCase_ == 1) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 1) {
            typeCase_ = 0;
            type_ = null;
          }
          contactBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>optional .Contact contact = 1;</code>
       */
      public com.polytech.spik.protocol.SpikMessages.Contact.Builder getContactBuilder() {
        return getContactFieldBuilder().getBuilder();
      }

      /**
       * <code>optional .Contact contact = 1;</code>
       */
      public com.polytech.spik.protocol.SpikMessages.ContactOrBuilder getContactOrBuilder() {
        if ((typeCase_ == 1) && (contactBuilder_ != null)) {
          return contactBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 1) {
            return (com.polytech.spik.protocol.SpikMessages.Contact) type_;
          }
          return com.polytech.spik.protocol.SpikMessages.Contact.getDefaultInstance();
        }
      }

      /**
       * <code>optional .Contact contact = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.polytech.spik.protocol.SpikMessages.Contact, com.polytech.spik.protocol.SpikMessages.Contact.Builder, com.polytech.spik.protocol.SpikMessages.ContactOrBuilder>
          getContactFieldBuilder() {
        if (contactBuilder_ == null) {
          if (!(typeCase_ == 1)) {
            type_ = com.polytech.spik.protocol.SpikMessages.Contact.getDefaultInstance();
          }
          contactBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.polytech.spik.protocol.SpikMessages.Contact, com.polytech.spik.protocol.SpikMessages.Contact.Builder, com.polytech.spik.protocol.SpikMessages.ContactOrBuilder>(
                  (com.polytech.spik.protocol.SpikMessages.Contact) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 1;
        return contactBuilder_;
      }

      /**
       * <code>optional .Conversation conversation = 2;</code>
       */
      public boolean hasConversation() {
        return typeCase_ == 2;
      }

      /**
       * <code>optional .Conversation conversation = 2;</code>
       */
      public com.polytech.spik.protocol.SpikMessages.Conversation getConversation() {
        if (conversationBuilder_ == null) {
          if (typeCase_ == 2) {
            return (com.polytech.spik.protocol.SpikMessages.Conversation) type_;
          }
          return com.polytech.spik.protocol.SpikMessages.Conversation.getDefaultInstance();
        } else {
          if (typeCase_ == 2) {
            return conversationBuilder_.getMessage();
          }
          return com.polytech.spik.protocol.SpikMessages.Conversation.getDefaultInstance();
        }
      }

      /**
       * <code>optional .Conversation conversation = 2;</code>
       */
      public Builder setConversation(
          com.polytech.spik.protocol.SpikMessages.Conversation.Builder builderForValue) {
        if (conversationBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          conversationBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 2;
        return this;
      }

      /**
       * <code>optional .Conversation conversation = 2;</code>
       */
      public Builder setConversation(com.polytech.spik.protocol.SpikMessages.Conversation value) {
        if (conversationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          conversationBuilder_.setMessage(value);
        }
        typeCase_ = 2;
        return this;
      }

      /**
       * <code>optional .Conversation conversation = 2;</code>
       */
      public Builder mergeConversation(com.polytech.spik.protocol.SpikMessages.Conversation value) {
        if (conversationBuilder_ == null) {
          if (typeCase_ == 2 &&
              type_ != com.polytech.spik.protocol.SpikMessages.Conversation.getDefaultInstance()) {
            type_ = com.polytech.spik.protocol.SpikMessages.Conversation.newBuilder((com.polytech.spik.protocol.SpikMessages.Conversation) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 2) {
            conversationBuilder_.mergeFrom(value);
          }
          conversationBuilder_.setMessage(value);
        }
        typeCase_ = 2;
        return this;
      }

      /**
       * <code>optional .Conversation conversation = 2;</code>
       */
      public Builder clearConversation() {
        if (conversationBuilder_ == null) {
          if (typeCase_ == 2) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 2) {
            typeCase_ = 0;
            type_ = null;
          }
          conversationBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>optional .Conversation conversation = 2;</code>
       */
      public com.polytech.spik.protocol.SpikMessages.Conversation.Builder getConversationBuilder() {
        return getConversationFieldBuilder().getBuilder();
      }

      /**
       * <code>optional .Conversation conversation = 2;</code>
       */
      public com.polytech.spik.protocol.SpikMessages.ConversationOrBuilder getConversationOrBuilder() {
        if ((typeCase_ == 2) && (conversationBuilder_ != null)) {
          return conversationBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 2) {
            return (com.polytech.spik.protocol.SpikMessages.Conversation) type_;
          }
          return com.polytech.spik.protocol.SpikMessages.Conversation.getDefaultInstance();
        }
      }

      /**
       * <code>optional .Conversation conversation = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.polytech.spik.protocol.SpikMessages.Conversation, com.polytech.spik.protocol.SpikMessages.Conversation.Builder, com.polytech.spik.protocol.SpikMessages.ConversationOrBuilder>
          getConversationFieldBuilder() {
        if (conversationBuilder_ == null) {
          if (!(typeCase_ == 2)) {
            type_ = com.polytech.spik.protocol.SpikMessages.Conversation.getDefaultInstance();
          }
          conversationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.polytech.spik.protocol.SpikMessages.Conversation, com.polytech.spik.protocol.SpikMessages.Conversation.Builder, com.polytech.spik.protocol.SpikMessages.ConversationOrBuilder>(
                  (com.polytech.spik.protocol.SpikMessages.Conversation) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 2;
        return conversationBuilder_;
      }

      /**
       * <code>optional .Sms sms = 3;</code>
       */
      public boolean hasSms() {
        return typeCase_ == 3;
      }

      /**
       * <code>optional .Sms sms = 3;</code>
       */
      public com.polytech.spik.protocol.SpikMessages.Sms getSms() {
        if (smsBuilder_ == null) {
          if (typeCase_ == 3) {
            return (com.polytech.spik.protocol.SpikMessages.Sms) type_;
          }
          return com.polytech.spik.protocol.SpikMessages.Sms.getDefaultInstance();
        } else {
          if (typeCase_ == 3) {
            return smsBuilder_.getMessage();
          }
          return com.polytech.spik.protocol.SpikMessages.Sms.getDefaultInstance();
        }
      }

      /**
       * <code>optional .Sms sms = 3;</code>
       */
      public Builder setSms(
          com.polytech.spik.protocol.SpikMessages.Sms.Builder builderForValue) {
        if (smsBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          smsBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 3;
        return this;
      }

      /**
       * <code>optional .Sms sms = 3;</code>
       */
      public Builder setSms(com.polytech.spik.protocol.SpikMessages.Sms value) {
        if (smsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          smsBuilder_.setMessage(value);
        }
        typeCase_ = 3;
        return this;
      }

      /**
       * <code>optional .Sms sms = 3;</code>
       */
      public Builder mergeSms(com.polytech.spik.protocol.SpikMessages.Sms value) {
        if (smsBuilder_ == null) {
          if (typeCase_ == 3 &&
              type_ != com.polytech.spik.protocol.SpikMessages.Sms.getDefaultInstance()) {
            type_ = com.polytech.spik.protocol.SpikMessages.Sms.newBuilder((com.polytech.spik.protocol.SpikMessages.Sms) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 3) {
            smsBuilder_.mergeFrom(value);
          }
          smsBuilder_.setMessage(value);
        }
        typeCase_ = 3;
        return this;
      }

      /**
       * <code>optional .Sms sms = 3;</code>
       */
      public Builder clearSms() {
        if (smsBuilder_ == null) {
          if (typeCase_ == 3) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 3) {
            typeCase_ = 0;
            type_ = null;
          }
          smsBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>optional .Sms sms = 3;</code>
       */
      public com.polytech.spik.protocol.SpikMessages.Sms.Builder getSmsBuilder() {
        return getSmsFieldBuilder().getBuilder();
      }

      /**
       * <code>optional .Sms sms = 3;</code>
       */
      public com.polytech.spik.protocol.SpikMessages.SmsOrBuilder getSmsOrBuilder() {
        if ((typeCase_ == 3) && (smsBuilder_ != null)) {
          return smsBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 3) {
            return (com.polytech.spik.protocol.SpikMessages.Sms) type_;
          }
          return com.polytech.spik.protocol.SpikMessages.Sms.getDefaultInstance();
        }
      }

      /**
       * <code>optional .Sms sms = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.polytech.spik.protocol.SpikMessages.Sms, com.polytech.spik.protocol.SpikMessages.Sms.Builder, com.polytech.spik.protocol.SpikMessages.SmsOrBuilder>
          getSmsFieldBuilder() {
        if (smsBuilder_ == null) {
          if (!(typeCase_ == 3)) {
            type_ = com.polytech.spik.protocol.SpikMessages.Sms.getDefaultInstance();
          }
          smsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.polytech.spik.protocol.SpikMessages.Sms, com.polytech.spik.protocol.SpikMessages.Sms.Builder, com.polytech.spik.protocol.SpikMessages.SmsOrBuilder>(
                  (com.polytech.spik.protocol.SpikMessages.Sms) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 3;
        return smsBuilder_;
      }

      /**
       * <code>optional .SendMessage sendMessage = 4;</code>
       */
      public boolean hasSendMessage() {
        return typeCase_ == 4;
      }

      /**
       * <code>optional .SendMessage sendMessage = 4;</code>
       */
      public com.polytech.spik.protocol.SpikMessages.SendMessage getSendMessage() {
        if (sendMessageBuilder_ == null) {
          if (typeCase_ == 4) {
            return (com.polytech.spik.protocol.SpikMessages.SendMessage) type_;
          }
          return com.polytech.spik.protocol.SpikMessages.SendMessage.getDefaultInstance();
        } else {
          if (typeCase_ == 4) {
            return sendMessageBuilder_.getMessage();
          }
          return com.polytech.spik.protocol.SpikMessages.SendMessage.getDefaultInstance();
        }
      }

      /**
       * <code>optional .SendMessage sendMessage = 4;</code>
       */
      public Builder setSendMessage(
          com.polytech.spik.protocol.SpikMessages.SendMessage.Builder builderForValue) {
        if (sendMessageBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          sendMessageBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 4;
        return this;
      }

      /**
       * <code>optional .SendMessage sendMessage = 4;</code>
       */
      public Builder setSendMessage(com.polytech.spik.protocol.SpikMessages.SendMessage value) {
        if (sendMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          sendMessageBuilder_.setMessage(value);
        }
        typeCase_ = 4;
        return this;
      }

      /**
       * <code>optional .SendMessage sendMessage = 4;</code>
       */
      public Builder mergeSendMessage(com.polytech.spik.protocol.SpikMessages.SendMessage value) {
        if (sendMessageBuilder_ == null) {
          if (typeCase_ == 4 &&
              type_ != com.polytech.spik.protocol.SpikMessages.SendMessage.getDefaultInstance()) {
            type_ = com.polytech.spik.protocol.SpikMessages.SendMessage.newBuilder((com.polytech.spik.protocol.SpikMessages.SendMessage) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 4) {
            sendMessageBuilder_.mergeFrom(value);
          }
          sendMessageBuilder_.setMessage(value);
        }
        typeCase_ = 4;
        return this;
      }

      /**
       * <code>optional .SendMessage sendMessage = 4;</code>
       */
      public Builder clearSendMessage() {
        if (sendMessageBuilder_ == null) {
          if (typeCase_ == 4) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 4) {
            typeCase_ = 0;
            type_ = null;
          }
          sendMessageBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>optional .SendMessage sendMessage = 4;</code>
       */
      public com.polytech.spik.protocol.SpikMessages.SendMessage.Builder getSendMessageBuilder() {
        return getSendMessageFieldBuilder().getBuilder();
      }

      /**
       * <code>optional .SendMessage sendMessage = 4;</code>
       */
      public com.polytech.spik.protocol.SpikMessages.SendMessageOrBuilder getSendMessageOrBuilder() {
        if ((typeCase_ == 4) && (sendMessageBuilder_ != null)) {
          return sendMessageBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 4) {
            return (com.polytech.spik.protocol.SpikMessages.SendMessage) type_;
          }
          return com.polytech.spik.protocol.SpikMessages.SendMessage.getDefaultInstance();
        }
      }

      /**
       * <code>optional .SendMessage sendMessage = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.polytech.spik.protocol.SpikMessages.SendMessage, com.polytech.spik.protocol.SpikMessages.SendMessage.Builder, com.polytech.spik.protocol.SpikMessages.SendMessageOrBuilder>
          getSendMessageFieldBuilder() {
        if (sendMessageBuilder_ == null) {
          if (!(typeCase_ == 4)) {
            type_ = com.polytech.spik.protocol.SpikMessages.SendMessage.getDefaultInstance();
          }
          sendMessageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.polytech.spik.protocol.SpikMessages.SendMessage, com.polytech.spik.protocol.SpikMessages.SendMessage.Builder, com.polytech.spik.protocol.SpikMessages.SendMessageOrBuilder>(
                  (com.polytech.spik.protocol.SpikMessages.SendMessage) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 4;
        return sendMessageBuilder_;
      }

      /**
       * <code>optional .StatusChanged statusChanged = 5;</code>
       */
      public boolean hasStatusChanged() {
        return typeCase_ == 5;
      }
      /**
       * <code>optional .StatusChanged statusChanged = 5;</code>
       */
      public com.polytech.spik.protocol.SpikMessages.StatusChanged getStatusChanged() {
        if (statusChangedBuilder_ == null) {
          if (typeCase_ == 5) {
            return (com.polytech.spik.protocol.SpikMessages.StatusChanged) type_;
          }
          return com.polytech.spik.protocol.SpikMessages.StatusChanged.getDefaultInstance();
        } else {
          if (typeCase_ == 5) {
            return statusChangedBuilder_.getMessage();
          }
          return com.polytech.spik.protocol.SpikMessages.StatusChanged.getDefaultInstance();
        }
      }

      /**
       * <code>optional .StatusChanged statusChanged = 5;</code>
       */
      public Builder setStatusChanged(
          com.polytech.spik.protocol.SpikMessages.StatusChanged.Builder builderForValue) {
        if (statusChangedBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          statusChangedBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 5;
        return this;
      }

      /**
       * <code>optional .StatusChanged statusChanged = 5;</code>
       */
      public Builder setStatusChanged(com.polytech.spik.protocol.SpikMessages.StatusChanged value) {
        if (statusChangedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          statusChangedBuilder_.setMessage(value);
        }
        typeCase_ = 5;
        return this;
      }

      /**
       * <code>optional .StatusChanged statusChanged = 5;</code>
       */
      public Builder mergeStatusChanged(com.polytech.spik.protocol.SpikMessages.StatusChanged value) {
        if (statusChangedBuilder_ == null) {
          if (typeCase_ == 5 &&
              type_ != com.polytech.spik.protocol.SpikMessages.StatusChanged.getDefaultInstance()) {
            type_ = com.polytech.spik.protocol.SpikMessages.StatusChanged.newBuilder((com.polytech.spik.protocol.SpikMessages.StatusChanged) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 5) {
            statusChangedBuilder_.mergeFrom(value);
          }
          statusChangedBuilder_.setMessage(value);
        }
        typeCase_ = 5;
        return this;
      }
      /**
       * <code>optional .StatusChanged statusChanged = 5;</code>
       */
      public Builder clearStatusChanged() {
        if (statusChangedBuilder_ == null) {
          if (typeCase_ == 5) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 5) {
            typeCase_ = 0;
            type_ = null;
          }
          statusChangedBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .StatusChanged statusChanged = 5;</code>
       */
      public com.polytech.spik.protocol.SpikMessages.StatusChanged.Builder getStatusChangedBuilder() {
        return getStatusChangedFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .StatusChanged statusChanged = 5;</code>
       */
      public com.polytech.spik.protocol.SpikMessages.StatusChangedOrBuilder getStatusChangedOrBuilder() {
        if ((typeCase_ == 5) && (statusChangedBuilder_ != null)) {
          return statusChangedBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 5) {
            return (com.polytech.spik.protocol.SpikMessages.StatusChanged) type_;
          }
          return com.polytech.spik.protocol.SpikMessages.StatusChanged.getDefaultInstance();
        }
      }
      /**
       * <code>optional .StatusChanged statusChanged = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.polytech.spik.protocol.SpikMessages.StatusChanged, com.polytech.spik.protocol.SpikMessages.StatusChanged.Builder, com.polytech.spik.protocol.SpikMessages.StatusChangedOrBuilder>
          getStatusChangedFieldBuilder() {
        if (statusChangedBuilder_ == null) {
          if (!(typeCase_ == 5)) {
            type_ = com.polytech.spik.protocol.SpikMessages.StatusChanged.getDefaultInstance();
          }
          statusChangedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.polytech.spik.protocol.SpikMessages.StatusChanged, com.polytech.spik.protocol.SpikMessages.StatusChanged.Builder, com.polytech.spik.protocol.SpikMessages.StatusChangedOrBuilder>(
                  (com.polytech.spik.protocol.SpikMessages.StatusChanged) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 5;
        return statusChangedBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:Wrapper)
    }

    // @@protoc_insertion_point(class_scope:Wrapper)
  }

  /**
   * Protobuf type {@code Contact}
   */
  public static final class Contact extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Contact)
      ContactOrBuilder {
    public static final int ID_FIELD_NUMBER = 1;
    public static final int NAME_FIELD_NUMBER = 2;
    public static final int PHONE_FIELD_NUMBER = 3;
    public static final int PICTURE_FIELD_NUMBER = 4;
    private static final Contact defaultInstance;
    private static final long serialVersionUID = 0L;
    public static com.google.protobuf.Parser<Contact> PARSER =
        new com.google.protobuf.AbstractParser<Contact>() {
      public Contact parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Contact(input, extensionRegistry);
      }
    };

    static {
      defaultInstance = new Contact(true);
      defaultInstance.initFields();
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    private int bitField0_;
    private long id_;
    private java.lang.Object name_;
    private java.lang.Object phone_;
    private com.google.protobuf.ByteString picture_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    // Use Contact.newBuilder() to construct.
    private Contact(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }

    private Contact(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
    private Contact(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              name_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              phone_ = bs;
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              picture_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static Contact getDefaultInstance() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.polytech.spik.protocol.SpikMessages.internal_static_Contact_descriptor;
    }

    public static com.polytech.spik.protocol.SpikMessages.Contact parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.polytech.spik.protocol.SpikMessages.Contact parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.Contact parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.polytech.spik.protocol.SpikMessages.Contact parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.Contact parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static com.polytech.spik.protocol.SpikMessages.Contact parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.Contact parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }

    public static com.polytech.spik.protocol.SpikMessages.Contact parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.Contact parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static com.polytech.spik.protocol.SpikMessages.Contact parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }

    public static Builder newBuilder(com.polytech.spik.protocol.SpikMessages.Contact prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Contact getDefaultInstanceForType() {
      return defaultInstance;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.polytech.spik.protocol.SpikMessages.internal_static_Contact_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.polytech.spik.protocol.SpikMessages.Contact.class, com.polytech.spik.protocol.SpikMessages.Contact.Builder.class);
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Contact> getParserForType() {
      return PARSER;
    }

    /**
     * <code>required int64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    /**
     * <code>required int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    /**
     * <code>required string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    /**
     * <code>required string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }

    /**
     * <code>required string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     * <code>optional string phone = 3;</code>
     */
    public boolean hasPhone() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }

    /**
     * <code>optional string phone = 3;</code>
     */
    public java.lang.String getPhone() {
      java.lang.Object ref = phone_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          phone_ = s;
        }
        return s;
      }
    }

    /**
     * <code>optional string phone = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPhoneBytes() {
      java.lang.Object ref = phone_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        phone_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     * <code>optional bytes picture = 4;</code>
     */
    public boolean hasPicture() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }

    /**
     * <code>optional bytes picture = 4;</code>
     */
    public com.google.protobuf.ByteString getPicture() {
      return picture_;
    }

    private void initFields() {
      id_ = 0L;
      name_ = "";
      phone_ = "";
      picture_ = com.google.protobuf.ByteString.EMPTY;
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getPhoneBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, picture_);
      }
      getUnknownFields().writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getPhoneBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, picture_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public Builder newBuilderForType() { return newBuilder(); }

    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     * Protobuf type {@code Contact}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Contact)
        com.polytech.spik.protocol.SpikMessages.ContactOrBuilder {
      private int bitField0_;
      private long id_ ;
      private java.lang.Object name_ = "";
      private java.lang.Object phone_ = "";
      private com.google.protobuf.ByteString picture_ = com.google.protobuf.ByteString.EMPTY;
      // Construct using com.polytech.spik.protocol.SpikMessages.Contact.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.polytech.spik.protocol.SpikMessages.internal_static_Contact_descriptor;
      }

      private static Builder create() {
        return new Builder();
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.polytech.spik.protocol.SpikMessages.internal_static_Contact_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.polytech.spik.protocol.SpikMessages.Contact.class, com.polytech.spik.protocol.SpikMessages.Contact.Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        phone_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        picture_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.polytech.spik.protocol.SpikMessages.internal_static_Contact_descriptor;
      }

      public com.polytech.spik.protocol.SpikMessages.Contact getDefaultInstanceForType() {
        return com.polytech.spik.protocol.SpikMessages.Contact.getDefaultInstance();
      }

      public com.polytech.spik.protocol.SpikMessages.Contact build() {
        com.polytech.spik.protocol.SpikMessages.Contact result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.polytech.spik.protocol.SpikMessages.Contact buildPartial() {
        com.polytech.spik.protocol.SpikMessages.Contact result = new com.polytech.spik.protocol.SpikMessages.Contact(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.phone_ = phone_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.picture_ = picture_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.polytech.spik.protocol.SpikMessages.Contact) {
          return mergeFrom((com.polytech.spik.protocol.SpikMessages.Contact)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.polytech.spik.protocol.SpikMessages.Contact other) {
        if (other == com.polytech.spik.protocol.SpikMessages.Contact.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasPhone()) {
          bitField0_ |= 0x00000004;
          phone_ = other.phone_;
          onChanged();
        }
        if (other.hasPicture()) {
          setPicture(other.getPicture());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {

          return false;
        }
        if (!hasName()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.polytech.spik.protocol.SpikMessages.Contact parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.polytech.spik.protocol.SpikMessages.Contact) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <code>required int64 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      /**
       * <code>required int64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }

      /**
       * <code>required int64 id = 1;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>required int64 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <code>required string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      /**
       * <code>required string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <code>required string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>required string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>required string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>required string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }

      /**
       * <code>optional string phone = 3;</code>
       */
      public boolean hasPhone() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }

      /**
       * <code>optional string phone = 3;</code>
       */
      public java.lang.String getPhone() {
        java.lang.Object ref = phone_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            phone_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <code>optional string phone = 3;</code>
       */
      public Builder setPhone(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        phone_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional string phone = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPhoneBytes() {
        java.lang.Object ref = phone_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          phone_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>optional string phone = 3;</code>
       */
      public Builder setPhoneBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        phone_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional string phone = 3;</code>
       */
      public Builder clearPhone() {
        bitField0_ = (bitField0_ & ~0x00000004);
        phone_ = getDefaultInstance().getPhone();
        onChanged();
        return this;
      }

      /**
       * <code>optional bytes picture = 4;</code>
       */
      public boolean hasPicture() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bytes picture = 4;</code>
       */
      public com.google.protobuf.ByteString getPicture() {
        return picture_;
      }
      /**
       * <code>optional bytes picture = 4;</code>
       */
      public Builder setPicture(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        picture_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes picture = 4;</code>
       */
      public Builder clearPicture() {
        bitField0_ = (bitField0_ & ~0x00000008);
        picture_ = getDefaultInstance().getPicture();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Contact)
    }

    // @@protoc_insertion_point(class_scope:Contact)
  }

  /**
   * Protobuf type {@code Conversation}
   */
  public static final class Conversation extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Conversation)
      ConversationOrBuilder {
    public static final int ID_FIELD_NUMBER = 1;
    public static final int PARTICIPANTS_FIELD_NUMBER = 2;
    public static final int MESSAGES_FIELD_NUMBER = 3;
    private static final Conversation defaultInstance;
    private static final long serialVersionUID = 0L;
    public static com.google.protobuf.Parser<Conversation> PARSER =
        new com.google.protobuf.AbstractParser<Conversation>() {
      public Conversation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Conversation(input, extensionRegistry);
      }
    };

    static {
      defaultInstance = new Conversation(true);
      defaultInstance.initFields();
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    private int bitField0_;
    private long id_;
    private java.util.List<java.lang.Long> participants_;
    private java.util.List<com.polytech.spik.protocol.SpikMessages.Sms> messages_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    // Use Conversation.newBuilder() to construct.
    private Conversation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Conversation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
    private Conversation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                participants_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              participants_.add(input.readInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                participants_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                participants_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                messages_ = new java.util.ArrayList<com.polytech.spik.protocol.SpikMessages.Sms>();
                mutable_bitField0_ |= 0x00000004;
              }
              messages_.add(input.readMessage(com.polytech.spik.protocol.SpikMessages.Sms.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          participants_ = java.util.Collections.unmodifiableList(participants_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          messages_ = java.util.Collections.unmodifiableList(messages_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static Conversation getDefaultInstance() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.polytech.spik.protocol.SpikMessages.internal_static_Conversation_descriptor;
    }

    public static com.polytech.spik.protocol.SpikMessages.Conversation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.polytech.spik.protocol.SpikMessages.Conversation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.Conversation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.polytech.spik.protocol.SpikMessages.Conversation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.Conversation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static com.polytech.spik.protocol.SpikMessages.Conversation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.Conversation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }

    public static com.polytech.spik.protocol.SpikMessages.Conversation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.Conversation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static com.polytech.spik.protocol.SpikMessages.Conversation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }

    public static Builder newBuilder(com.polytech.spik.protocol.SpikMessages.Conversation prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Conversation getDefaultInstanceForType() {
      return defaultInstance;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.polytech.spik.protocol.SpikMessages.internal_static_Conversation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.polytech.spik.protocol.SpikMessages.Conversation.class, com.polytech.spik.protocol.SpikMessages.Conversation.Builder.class);
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Conversation> getParserForType() {
      return PARSER;
    }

    /**
     * <code>required int64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    /**
     * <code>required int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    /**
     * <code>repeated int64 participants = 2;</code>
     */
    public java.util.List<java.lang.Long>
        getParticipantsList() {
      return participants_;
    }

    /**
     * <code>repeated int64 participants = 2;</code>
     */
    public int getParticipantsCount() {
      return participants_.size();
    }

    /**
     * <code>repeated int64 participants = 2;</code>
     */
    public long getParticipants(int index) {
      return participants_.get(index);
    }

    /**
     * <code>repeated .Sms messages = 3;</code>
     */
    public java.util.List<com.polytech.spik.protocol.SpikMessages.Sms> getMessagesList() {
      return messages_;
    }

    /**
     * <code>repeated .Sms messages = 3;</code>
     */
    public java.util.List<? extends com.polytech.spik.protocol.SpikMessages.SmsOrBuilder>
        getMessagesOrBuilderList() {
      return messages_;
    }

    /**
     * <code>repeated .Sms messages = 3;</code>
     */
    public int getMessagesCount() {
      return messages_.size();
    }

    /**
     * <code>repeated .Sms messages = 3;</code>
     */
    public com.polytech.spik.protocol.SpikMessages.Sms getMessages(int index) {
      return messages_.get(index);
    }

    /**
     * <code>repeated .Sms messages = 3;</code>
     */
    public com.polytech.spik.protocol.SpikMessages.SmsOrBuilder getMessagesOrBuilder(
        int index) {
      return messages_.get(index);
    }

    private void initFields() {
      id_ = 0L;
      participants_ = java.util.Collections.emptyList();
      messages_ = java.util.Collections.emptyList();
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getMessagesCount(); i++) {
        if (!getMessages(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      for (int i = 0; i < participants_.size(); i++) {
        output.writeInt64(2, participants_.get(i));
      }
      for (int i = 0; i < messages_.size(); i++) {
        output.writeMessage(3, messages_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < participants_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(participants_.get(i));
        }
        size += dataSize;
        size += 1 * getParticipantsList().size();
      }
      for (int i = 0; i < messages_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, messages_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public Builder newBuilderForType() { return newBuilder(); }

    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     * Protobuf type {@code Conversation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Conversation)
        com.polytech.spik.protocol.SpikMessages.ConversationOrBuilder {
      private int bitField0_;
      private long id_ ;
      private java.util.List<java.lang.Long> participants_ = java.util.Collections.emptyList();
      private java.util.List<com.polytech.spik.protocol.SpikMessages.Sms> messages_ =
        java.util.Collections.emptyList();
      private com.google.protobuf.RepeatedFieldBuilder<
          com.polytech.spik.protocol.SpikMessages.Sms, com.polytech.spik.protocol.SpikMessages.Sms.Builder, com.polytech.spik.protocol.SpikMessages.SmsOrBuilder> messagesBuilder_;
      // Construct using com.polytech.spik.protocol.SpikMessages.Conversation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.polytech.spik.protocol.SpikMessages.internal_static_Conversation_descriptor;
      }

      private static Builder create() {
        return new Builder();
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.polytech.spik.protocol.SpikMessages.internal_static_Conversation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.polytech.spik.protocol.SpikMessages.Conversation.class, com.polytech.spik.protocol.SpikMessages.Conversation.Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMessagesFieldBuilder();
        }
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        participants_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        if (messagesBuilder_ == null) {
          messages_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          messagesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.polytech.spik.protocol.SpikMessages.internal_static_Conversation_descriptor;
      }

      public com.polytech.spik.protocol.SpikMessages.Conversation getDefaultInstanceForType() {
        return com.polytech.spik.protocol.SpikMessages.Conversation.getDefaultInstance();
      }

      public com.polytech.spik.protocol.SpikMessages.Conversation build() {
        com.polytech.spik.protocol.SpikMessages.Conversation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.polytech.spik.protocol.SpikMessages.Conversation buildPartial() {
        com.polytech.spik.protocol.SpikMessages.Conversation result = new com.polytech.spik.protocol.SpikMessages.Conversation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          participants_ = java.util.Collections.unmodifiableList(participants_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.participants_ = participants_;
        if (messagesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            messages_ = java.util.Collections.unmodifiableList(messages_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.messages_ = messages_;
        } else {
          result.messages_ = messagesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.polytech.spik.protocol.SpikMessages.Conversation) {
          return mergeFrom((com.polytech.spik.protocol.SpikMessages.Conversation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.polytech.spik.protocol.SpikMessages.Conversation other) {
        if (other == com.polytech.spik.protocol.SpikMessages.Conversation.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (!other.participants_.isEmpty()) {
          if (participants_.isEmpty()) {
            participants_ = other.participants_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureParticipantsIsMutable();
            participants_.addAll(other.participants_);
          }
          onChanged();
        }
        if (messagesBuilder_ == null) {
          if (!other.messages_.isEmpty()) {
            if (messages_.isEmpty()) {
              messages_ = other.messages_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureMessagesIsMutable();
              messages_.addAll(other.messages_);
            }
            onChanged();
          }
        } else {
          if (!other.messages_.isEmpty()) {
            if (messagesBuilder_.isEmpty()) {
              messagesBuilder_.dispose();
              messagesBuilder_ = null;
              messages_ = other.messages_;
              bitField0_ = (bitField0_ & ~0x00000004);
              messagesBuilder_ =
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessagesFieldBuilder() : null;
            } else {
              messagesBuilder_.addAllMessages(other.messages_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {

          return false;
        }
        for (int i = 0; i < getMessagesCount(); i++) {
          if (!getMessages(i).isInitialized()) {

            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.polytech.spik.protocol.SpikMessages.Conversation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.polytech.spik.protocol.SpikMessages.Conversation) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <code>required int64 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      /**
       * <code>required int64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }

      /**
       * <code>required int64 id = 1;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>required int64 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private void ensureParticipantsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          participants_ = new java.util.ArrayList<java.lang.Long>(participants_);
          bitField0_ |= 0x00000002;
         }
      }

      /**
       * <code>repeated int64 participants = 2;</code>
       */
      public java.util.List<java.lang.Long>
          getParticipantsList() {
        return java.util.Collections.unmodifiableList(participants_);
      }

      /**
       * <code>repeated int64 participants = 2;</code>
       */
      public int getParticipantsCount() {
        return participants_.size();
      }

      /**
       * <code>repeated int64 participants = 2;</code>
       */
      public long getParticipants(int index) {
        return participants_.get(index);
      }

      /**
       * <code>repeated int64 participants = 2;</code>
       */
      public Builder setParticipants(
          int index, long value) {
        ensureParticipantsIsMutable();
        participants_.set(index, value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated int64 participants = 2;</code>
       */
      public Builder addParticipants(long value) {
        ensureParticipantsIsMutable();
        participants_.add(value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated int64 participants = 2;</code>
       */
      public Builder addAllParticipants(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureParticipantsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, participants_);
        onChanged();
        return this;
      }

      /**
       * <code>repeated int64 participants = 2;</code>
       */
      public Builder clearParticipants() {
        participants_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private void ensureMessagesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          messages_ = new java.util.ArrayList<com.polytech.spik.protocol.SpikMessages.Sms>(messages_);
          bitField0_ |= 0x00000004;
         }
      }

      /**
       * <code>repeated .Sms messages = 3;</code>
       */
      public java.util.List<com.polytech.spik.protocol.SpikMessages.Sms> getMessagesList() {
        if (messagesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(messages_);
        } else {
          return messagesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Sms messages = 3;</code>
       */
      public int getMessagesCount() {
        if (messagesBuilder_ == null) {
          return messages_.size();
        } else {
          return messagesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Sms messages = 3;</code>
       */
      public com.polytech.spik.protocol.SpikMessages.Sms getMessages(int index) {
        if (messagesBuilder_ == null) {
          return messages_.get(index);
        } else {
          return messagesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Sms messages = 3;</code>
       */
      public Builder setMessages(
          int index, com.polytech.spik.protocol.SpikMessages.Sms value) {
        if (messagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessagesIsMutable();
          messages_.set(index, value);
          onChanged();
        } else {
          messagesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Sms messages = 3;</code>
       */
      public Builder setMessages(
          int index, com.polytech.spik.protocol.SpikMessages.Sms.Builder builderForValue) {
        if (messagesBuilder_ == null) {
          ensureMessagesIsMutable();
          messages_.set(index, builderForValue.build());
          onChanged();
        } else {
          messagesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Sms messages = 3;</code>
       */
      public Builder addMessages(com.polytech.spik.protocol.SpikMessages.Sms value) {
        if (messagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessagesIsMutable();
          messages_.add(value);
          onChanged();
        } else {
          messagesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Sms messages = 3;</code>
       */
      public Builder addMessages(
          int index, com.polytech.spik.protocol.SpikMessages.Sms value) {
        if (messagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessagesIsMutable();
          messages_.add(index, value);
          onChanged();
        } else {
          messagesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Sms messages = 3;</code>
       */
      public Builder addMessages(
          com.polytech.spik.protocol.SpikMessages.Sms.Builder builderForValue) {
        if (messagesBuilder_ == null) {
          ensureMessagesIsMutable();
          messages_.add(builderForValue.build());
          onChanged();
        } else {
          messagesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Sms messages = 3;</code>
       */
      public Builder addMessages(
          int index, com.polytech.spik.protocol.SpikMessages.Sms.Builder builderForValue) {
        if (messagesBuilder_ == null) {
          ensureMessagesIsMutable();
          messages_.add(index, builderForValue.build());
          onChanged();
        } else {
          messagesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Sms messages = 3;</code>
       */
      public Builder addAllMessages(
          java.lang.Iterable<? extends com.polytech.spik.protocol.SpikMessages.Sms> values) {
        if (messagesBuilder_ == null) {
          ensureMessagesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, messages_);
          onChanged();
        } else {
          messagesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Sms messages = 3;</code>
       */
      public Builder clearMessages() {
        if (messagesBuilder_ == null) {
          messages_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          messagesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Sms messages = 3;</code>
       */
      public Builder removeMessages(int index) {
        if (messagesBuilder_ == null) {
          ensureMessagesIsMutable();
          messages_.remove(index);
          onChanged();
        } else {
          messagesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Sms messages = 3;</code>
       */
      public com.polytech.spik.protocol.SpikMessages.Sms.Builder getMessagesBuilder(
          int index) {
        return getMessagesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Sms messages = 3;</code>
       */
      public com.polytech.spik.protocol.SpikMessages.SmsOrBuilder getMessagesOrBuilder(
          int index) {
        if (messagesBuilder_ == null) {
          return messages_.get(index);  } else {
          return messagesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Sms messages = 3;</code>
       */
      public java.util.List<? extends com.polytech.spik.protocol.SpikMessages.SmsOrBuilder>
           getMessagesOrBuilderList() {
        if (messagesBuilder_ != null) {
          return messagesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(messages_);
        }
      }
      /**
       * <code>repeated .Sms messages = 3;</code>
       */
      public com.polytech.spik.protocol.SpikMessages.Sms.Builder addMessagesBuilder() {
        return getMessagesFieldBuilder().addBuilder(
            com.polytech.spik.protocol.SpikMessages.Sms.getDefaultInstance());
      }
      /**
       * <code>repeated .Sms messages = 3;</code>
       */
      public com.polytech.spik.protocol.SpikMessages.Sms.Builder addMessagesBuilder(
          int index) {
        return getMessagesFieldBuilder().addBuilder(
            index, com.polytech.spik.protocol.SpikMessages.Sms.getDefaultInstance());
      }
      /**
       * <code>repeated .Sms messages = 3;</code>
       */
      public java.util.List<com.polytech.spik.protocol.SpikMessages.Sms.Builder>
           getMessagesBuilderList() {
        return getMessagesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.polytech.spik.protocol.SpikMessages.Sms, com.polytech.spik.protocol.SpikMessages.Sms.Builder, com.polytech.spik.protocol.SpikMessages.SmsOrBuilder>
          getMessagesFieldBuilder() {
        if (messagesBuilder_ == null) {
          messagesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.polytech.spik.protocol.SpikMessages.Sms, com.polytech.spik.protocol.SpikMessages.Sms.Builder, com.polytech.spik.protocol.SpikMessages.SmsOrBuilder>(
                  messages_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          messages_ = null;
        }
        return messagesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:Conversation)
    }

    // @@protoc_insertion_point(class_scope:Conversation)
  }

  /**
   * Protobuf type {@code Sms}
   */
  public static final class Sms extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        Sms> implements
      // @@protoc_insertion_point(message_implements:Sms)
      SmsOrBuilder {
    public static final int THREADID_FIELD_NUMBER = 1;
    public static final int DATE_FIELD_NUMBER = 2;
    public static final int TEXT_FIELD_NUMBER = 3;
    public static final int READ_FIELD_NUMBER = 4;
    public static final int STATUS_FIELD_NUMBER = 5;
    private static final Sms defaultInstance;
    private static final long serialVersionUID = 0L;
    public static com.google.protobuf.Parser<Sms> PARSER =
        new com.google.protobuf.AbstractParser<Sms>() {
      public Sms parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Sms(input, extensionRegistry);
      }
    };

    static {
      defaultInstance = new Sms(true);
      defaultInstance.initFields();
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    private int bitField0_;
    private long threadId_;
    private long date_;
    private java.lang.Object text_;
    private boolean read_;
    private com.polytech.spik.protocol.SpikMessages.Status status_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    // Use Sms.newBuilder() to construct.
    private Sms(com.google.protobuf.GeneratedMessage.ExtendableBuilder<com.polytech.spik.protocol.SpikMessages.Sms, ?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Sms(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
    private Sms(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              threadId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              date_ = input.readInt64();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              text_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              read_ = input.readBool();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              com.polytech.spik.protocol.SpikMessages.Status value = com.polytech.spik.protocol.SpikMessages.Status.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                status_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static Sms getDefaultInstance() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.polytech.spik.protocol.SpikMessages.internal_static_Sms_descriptor;
    }

    public static com.polytech.spik.protocol.SpikMessages.Sms parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.polytech.spik.protocol.SpikMessages.Sms parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.Sms parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.polytech.spik.protocol.SpikMessages.Sms parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.Sms parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static com.polytech.spik.protocol.SpikMessages.Sms parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.Sms parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }

    public static com.polytech.spik.protocol.SpikMessages.Sms parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.Sms parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static com.polytech.spik.protocol.SpikMessages.Sms parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }

    public static Builder newBuilder(com.polytech.spik.protocol.SpikMessages.Sms prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Sms getDefaultInstanceForType() {
      return defaultInstance;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.polytech.spik.protocol.SpikMessages.internal_static_Sms_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.polytech.spik.protocol.SpikMessages.Sms.class, com.polytech.spik.protocol.SpikMessages.Sms.Builder.class);
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Sms> getParserForType() {
      return PARSER;
    }

    /**
     * <code>optional int64 threadId = 1;</code>
     */
    public boolean hasThreadId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    /**
     * <code>optional int64 threadId = 1;</code>
     */
    public long getThreadId() {
      return threadId_;
    }

    /**
     * <code>required int64 date = 2;</code>
     */
    public boolean hasDate() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    /**
     * <code>required int64 date = 2;</code>
     */
    public long getDate() {
      return date_;
    }

    /**
     * <code>required string text = 3;</code>
     */
    public boolean hasText() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }

    /**
     * <code>required string text = 3;</code>
     */
    public java.lang.String getText() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          text_ = s;
        }
        return s;
      }
    }

    /**
     * <code>required string text = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTextBytes() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        text_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     * <code>required bool read = 4;</code>
     */
    public boolean hasRead() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }

    /**
     * <code>required bool read = 4;</code>
     */
    public boolean getRead() {
      return read_;
    }

    /**
     * <code>required .Status status = 5;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }

    /**
     * <code>required .Status status = 5;</code>
     */
    public com.polytech.spik.protocol.SpikMessages.Status getStatus() {
      return status_;
    }

    private void initFields() {
      threadId_ = 0L;
      date_ = 0L;
      text_ = "";
      read_ = false;
      status_ = com.polytech.spik.protocol.SpikMessages.Status.SENDING;
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDate()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasText()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRead()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage
        .ExtendableMessage<com.polytech.spik.protocol.SpikMessages.Sms>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, threadId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, date_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getTextBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, read_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, status_.getNumber());
      }
      extensionWriter.writeUntil(200, output);
      getUnknownFields().writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, threadId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, date_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getTextBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, read_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, status_.getNumber());
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public Builder newBuilderForType() { return newBuilder(); }

    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     * Protobuf type {@code Sms}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          com.polytech.spik.protocol.SpikMessages.Sms, Builder> implements
        // @@protoc_insertion_point(builder_implements:Sms)
        com.polytech.spik.protocol.SpikMessages.SmsOrBuilder {
      private int bitField0_;
      private long threadId_ ;
      private long date_ ;
      private java.lang.Object text_ = "";
      private boolean read_ ;
      private com.polytech.spik.protocol.SpikMessages.Status status_ = com.polytech.spik.protocol.SpikMessages.Status.SENDING;

      // Construct using com.polytech.spik.protocol.SpikMessages.Sms.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.polytech.spik.protocol.SpikMessages.internal_static_Sms_descriptor;
      }

      private static Builder create() {
        return new Builder();
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.polytech.spik.protocol.SpikMessages.internal_static_Sms_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.polytech.spik.protocol.SpikMessages.Sms.class, com.polytech.spik.protocol.SpikMessages.Sms.Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        threadId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        date_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        text_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        read_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = com.polytech.spik.protocol.SpikMessages.Status.SENDING;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.polytech.spik.protocol.SpikMessages.internal_static_Sms_descriptor;
      }

      public com.polytech.spik.protocol.SpikMessages.Sms getDefaultInstanceForType() {
        return com.polytech.spik.protocol.SpikMessages.Sms.getDefaultInstance();
      }

      public com.polytech.spik.protocol.SpikMessages.Sms build() {
        com.polytech.spik.protocol.SpikMessages.Sms result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.polytech.spik.protocol.SpikMessages.Sms buildPartial() {
        com.polytech.spik.protocol.SpikMessages.Sms result = new com.polytech.spik.protocol.SpikMessages.Sms(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.threadId_ = threadId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.date_ = date_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.text_ = text_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.read_ = read_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.status_ = status_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.polytech.spik.protocol.SpikMessages.Sms) {
          return mergeFrom((com.polytech.spik.protocol.SpikMessages.Sms)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.polytech.spik.protocol.SpikMessages.Sms other) {
        if (other == com.polytech.spik.protocol.SpikMessages.Sms.getDefaultInstance()) return this;
        if (other.hasThreadId()) {
          setThreadId(other.getThreadId());
        }
        if (other.hasDate()) {
          setDate(other.getDate());
        }
        if (other.hasText()) {
          bitField0_ |= 0x00000004;
          text_ = other.text_;
          onChanged();
        }
        if (other.hasRead()) {
          setRead(other.getRead());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDate()) {

          return false;
        }
        if (!hasText()) {

          return false;
        }
        if (!hasRead()) {

          return false;
        }
        if (!hasStatus()) {

          return false;
        }
        if (!extensionsAreInitialized()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.polytech.spik.protocol.SpikMessages.Sms parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.polytech.spik.protocol.SpikMessages.Sms) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <code>optional int64 threadId = 1;</code>
       */
      public boolean hasThreadId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      /**
       * <code>optional int64 threadId = 1;</code>
       */
      public long getThreadId() {
        return threadId_;
      }

      /**
       * <code>optional int64 threadId = 1;</code>
       */
      public Builder setThreadId(long value) {
        bitField0_ |= 0x00000001;
        threadId_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional int64 threadId = 1;</code>
       */
      public Builder clearThreadId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        threadId_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <code>required int64 date = 2;</code>
       */
      public boolean hasDate() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      /**
       * <code>required int64 date = 2;</code>
       */
      public long getDate() {
        return date_;
      }

      /**
       * <code>required int64 date = 2;</code>
       */
      public Builder setDate(long value) {
        bitField0_ |= 0x00000002;
        date_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>required int64 date = 2;</code>
       */
      public Builder clearDate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        date_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <code>required string text = 3;</code>
       */
      public boolean hasText() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }

      /**
       * <code>required string text = 3;</code>
       */
      public java.lang.String getText() {
        java.lang.Object ref = text_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            text_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <code>required string text = 3;</code>
       */
      public Builder setText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        text_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>required string text = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTextBytes() {
        java.lang.Object ref = text_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>required string text = 3;</code>
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        text_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>required string text = 3;</code>
       */
      public Builder clearText() {
        bitField0_ = (bitField0_ & ~0x00000004);
        text_ = getDefaultInstance().getText();
        onChanged();
        return this;
      }

      /**
       * <code>required bool read = 4;</code>
       */
      public boolean hasRead() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }

      /**
       * <code>required bool read = 4;</code>
       */
      public boolean getRead() {
        return read_;
      }

      /**
       * <code>required bool read = 4;</code>
       */
      public Builder setRead(boolean value) {
        bitField0_ |= 0x00000008;
        read_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>required bool read = 4;</code>
       */
      public Builder clearRead() {
        bitField0_ = (bitField0_ & ~0x00000008);
        read_ = false;
        onChanged();
        return this;
      }

      /**
       * <code>required .Status status = 5;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required .Status status = 5;</code>
       */
      public com.polytech.spik.protocol.SpikMessages.Status getStatus() {
        return status_;
      }
      /**
       * <code>required .Status status = 5;</code>
       */
      public Builder setStatus(com.polytech.spik.protocol.SpikMessages.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .Status status = 5;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = com.polytech.spik.protocol.SpikMessages.Status.SENDING;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Sms)
    }

    // @@protoc_insertion_point(class_scope:Sms)
  }

  /**
   * Protobuf type {@code SendMessage}
   */
  public static final class SendMessage extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SendMessage)
      SendMessageOrBuilder {
    public static final int MID_FIELD_NUMBER = 1;
    public static final int PARTICIPANTS_FIELD_NUMBER = 2;
    public static final int TEXT_FIELD_NUMBER = 3;
    public static final int MIMETYPE_FIELD_NUMBER = 4;
    public static final int DATA_FIELD_NUMBER = 5;
    private static final SendMessage defaultInstance;
    private static final long serialVersionUID = 0L;
    public static com.google.protobuf.Parser<SendMessage> PARSER =
        new com.google.protobuf.AbstractParser<SendMessage>() {
      public SendMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SendMessage(input, extensionRegistry);
      }
    };

    static {
      defaultInstance = new SendMessage(true);
      defaultInstance.initFields();
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    private int bitField0_;
    private long mid_;
    private com.google.protobuf.LazyStringList participants_;
    private java.lang.Object text_;
    private java.lang.Object mimeType_;
    private com.google.protobuf.ByteString data_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    // Use SendMessage.newBuilder() to construct.
    private SendMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SendMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
    private SendMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              mid_ = input.readInt64();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                participants_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              participants_.add(bs);
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              text_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              mimeType_ = bs;
              break;
            }
            case 42: {
              bitField0_ |= 0x00000008;
              data_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          participants_ = participants_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static SendMessage getDefaultInstance() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.polytech.spik.protocol.SpikMessages.internal_static_SendMessage_descriptor;
    }

    public static com.polytech.spik.protocol.SpikMessages.SendMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.polytech.spik.protocol.SpikMessages.SendMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.SendMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.polytech.spik.protocol.SpikMessages.SendMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.SendMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static com.polytech.spik.protocol.SpikMessages.SendMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.SendMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }

    public static com.polytech.spik.protocol.SpikMessages.SendMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.SendMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static com.polytech.spik.protocol.SpikMessages.SendMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }

    public static Builder newBuilder(com.polytech.spik.protocol.SpikMessages.SendMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public SendMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.polytech.spik.protocol.SpikMessages.internal_static_SendMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.polytech.spik.protocol.SpikMessages.SendMessage.class, com.polytech.spik.protocol.SpikMessages.SendMessage.Builder.class);
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SendMessage> getParserForType() {
      return PARSER;
    }

    /**
     * <code>required int64 mid = 1;</code>
     */
    public boolean hasMid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    /**
     * <code>required int64 mid = 1;</code>
     */
    public long getMid() {
      return mid_;
    }

    /**
     * <code>repeated string participants = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getParticipantsList() {
      return participants_;
    }

    /**
     * <code>repeated string participants = 2;</code>
     */
    public int getParticipantsCount() {
      return participants_.size();
    }

    /**
     * <code>repeated string participants = 2;</code>
     */
    public java.lang.String getParticipants(int index) {
      return participants_.get(index);
    }

    /**
     * <code>repeated string participants = 2;</code>
     */
    public com.google.protobuf.ByteString
        getParticipantsBytes(int index) {
      return participants_.getByteString(index);
    }

    /**
     * <code>required string text = 3;</code>
     */
    public boolean hasText() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    /**
     * <code>required string text = 3;</code>
     */
    public java.lang.String getText() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          text_ = s;
        }
        return s;
      }
    }

    /**
     * <code>required string text = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTextBytes() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        text_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     * <code>optional string mimeType = 4;</code>
     */
    public boolean hasMimeType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }

    /**
     * <code>optional string mimeType = 4;</code>
     */
    public java.lang.String getMimeType() {
      java.lang.Object ref = mimeType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mimeType_ = s;
        }
        return s;
      }
    }

    /**
     * <code>optional string mimeType = 4;</code>
     */
    public com.google.protobuf.ByteString
        getMimeTypeBytes() {
      java.lang.Object ref = mimeType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mimeType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     * <code>optional bytes data = 5;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }

    /**
     * <code>optional bytes data = 5;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private void initFields() {
      mid_ = 0L;
      participants_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      text_ = "";
      mimeType_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasText()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, mid_);
      }
      for (int i = 0; i < participants_.size(); i++) {
        output.writeBytes(2, participants_.getByteString(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(3, getTextBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(4, getMimeTypeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(5, data_);
      }
      getUnknownFields().writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, mid_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < participants_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(participants_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getParticipantsList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getTextBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getMimeTypeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public Builder newBuilderForType() { return newBuilder(); }

    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     * Protobuf type {@code SendMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SendMessage)
        com.polytech.spik.protocol.SpikMessages.SendMessageOrBuilder {
      private int bitField0_;
      private long mid_ ;
      private com.google.protobuf.LazyStringList participants_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private java.lang.Object text_ = "";
      private java.lang.Object mimeType_ = "";
      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;

      // Construct using com.polytech.spik.protocol.SpikMessages.SendMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.polytech.spik.protocol.SpikMessages.internal_static_SendMessage_descriptor;
      }

      private static Builder create() {
        return new Builder();
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.polytech.spik.protocol.SpikMessages.internal_static_SendMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.polytech.spik.protocol.SpikMessages.SendMessage.class, com.polytech.spik.protocol.SpikMessages.SendMessage.Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        mid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        participants_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        text_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        mimeType_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.polytech.spik.protocol.SpikMessages.internal_static_SendMessage_descriptor;
      }

      public com.polytech.spik.protocol.SpikMessages.SendMessage getDefaultInstanceForType() {
        return com.polytech.spik.protocol.SpikMessages.SendMessage.getDefaultInstance();
      }

      public com.polytech.spik.protocol.SpikMessages.SendMessage build() {
        com.polytech.spik.protocol.SpikMessages.SendMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.polytech.spik.protocol.SpikMessages.SendMessage buildPartial() {
        com.polytech.spik.protocol.SpikMessages.SendMessage result = new com.polytech.spik.protocol.SpikMessages.SendMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mid_ = mid_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          participants_ = participants_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.participants_ = participants_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.text_ = text_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.mimeType_ = mimeType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.polytech.spik.protocol.SpikMessages.SendMessage) {
          return mergeFrom((com.polytech.spik.protocol.SpikMessages.SendMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.polytech.spik.protocol.SpikMessages.SendMessage other) {
        if (other == com.polytech.spik.protocol.SpikMessages.SendMessage.getDefaultInstance()) return this;
        if (other.hasMid()) {
          setMid(other.getMid());
        }
        if (!other.participants_.isEmpty()) {
          if (participants_.isEmpty()) {
            participants_ = other.participants_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureParticipantsIsMutable();
            participants_.addAll(other.participants_);
          }
          onChanged();
        }
        if (other.hasText()) {
          bitField0_ |= 0x00000004;
          text_ = other.text_;
          onChanged();
        }
        if (other.hasMimeType()) {
          bitField0_ |= 0x00000008;
          mimeType_ = other.mimeType_;
          onChanged();
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMid()) {

          return false;
        }
        if (!hasText()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.polytech.spik.protocol.SpikMessages.SendMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.polytech.spik.protocol.SpikMessages.SendMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <code>required int64 mid = 1;</code>
       */
      public boolean hasMid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      /**
       * <code>required int64 mid = 1;</code>
       */
      public long getMid() {
        return mid_;
      }

      /**
       * <code>required int64 mid = 1;</code>
       */
      public Builder setMid(long value) {
        bitField0_ |= 0x00000001;
        mid_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>required int64 mid = 1;</code>
       */
      public Builder clearMid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mid_ = 0L;
        onChanged();
        return this;
      }

      private void ensureParticipantsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          participants_ = new com.google.protobuf.LazyStringArrayList(participants_);
          bitField0_ |= 0x00000002;
         }
      }

      /**
       * <code>repeated string participants = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getParticipantsList() {
        return participants_.getUnmodifiableView();
      }

      /**
       * <code>repeated string participants = 2;</code>
       */
      public int getParticipantsCount() {
        return participants_.size();
      }

      /**
       * <code>repeated string participants = 2;</code>
       */
      public java.lang.String getParticipants(int index) {
        return participants_.get(index);
      }

      /**
       * <code>repeated string participants = 2;</code>
       */
      public com.google.protobuf.ByteString
          getParticipantsBytes(int index) {
        return participants_.getByteString(index);
      }

      /**
       * <code>repeated string participants = 2;</code>
       */
      public Builder setParticipants(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureParticipantsIsMutable();
        participants_.set(index, value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated string participants = 2;</code>
       */
      public Builder addParticipants(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureParticipantsIsMutable();
        participants_.add(value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated string participants = 2;</code>
       */
      public Builder addAllParticipants(
          java.lang.Iterable<java.lang.String> values) {
        ensureParticipantsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, participants_);
        onChanged();
        return this;
      }

      /**
       * <code>repeated string participants = 2;</code>
       */
      public Builder clearParticipants() {
        participants_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      /**
       * <code>repeated string participants = 2;</code>
       */
      public Builder addParticipantsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureParticipantsIsMutable();
        participants_.add(value);
        onChanged();
        return this;
      }

      /**
       * <code>required string text = 3;</code>
       */
      public boolean hasText() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }

      /**
       * <code>required string text = 3;</code>
       */
      public java.lang.String getText() {
        java.lang.Object ref = text_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            text_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <code>required string text = 3;</code>
       */
      public Builder setText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        text_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>required string text = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTextBytes() {
        java.lang.Object ref = text_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>required string text = 3;</code>
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        text_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>required string text = 3;</code>
       */
      public Builder clearText() {
        bitField0_ = (bitField0_ & ~0x00000004);
        text_ = getDefaultInstance().getText();
        onChanged();
        return this;
      }

      /**
       * <code>optional string mimeType = 4;</code>
       */
      public boolean hasMimeType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }

      /**
       * <code>optional string mimeType = 4;</code>
       */
      public java.lang.String getMimeType() {
        java.lang.Object ref = mimeType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            mimeType_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <code>optional string mimeType = 4;</code>
       */
      public Builder setMimeType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        mimeType_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional string mimeType = 4;</code>
       */
      public com.google.protobuf.ByteString
          getMimeTypeBytes() {
        java.lang.Object ref = mimeType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mimeType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>optional string mimeType = 4;</code>
       */
      public Builder setMimeTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        mimeType_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional string mimeType = 4;</code>
       */
      public Builder clearMimeType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        mimeType_ = getDefaultInstance().getMimeType();
        onChanged();
        return this;
      }

      /**
       * <code>optional bytes data = 5;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bytes data = 5;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>optional bytes data = 5;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes data = 5;</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000010);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SendMessage)
    }

    // @@protoc_insertion_point(class_scope:SendMessage)
  }

  /**
   * Protobuf type {@code StatusChanged}
   */
  public static final class StatusChanged extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:StatusChanged)
      StatusChangedOrBuilder {
    public static final int MID_FIELD_NUMBER = 1;
    public static final int STATUS_FIELD_NUMBER = 2;
    private static final StatusChanged defaultInstance;
    private static final long serialVersionUID = 0L;
    public static com.google.protobuf.Parser<StatusChanged> PARSER =
        new com.google.protobuf.AbstractParser<StatusChanged>() {
      public StatusChanged parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StatusChanged(input, extensionRegistry);
      }
    };

    static {
      defaultInstance = new StatusChanged(true);
      defaultInstance.initFields();
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    private int bitField0_;
    private long mid_;
    private com.polytech.spik.protocol.SpikMessages.Status status_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    // Use StatusChanged.newBuilder() to construct.
    private StatusChanged(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private StatusChanged(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
    private StatusChanged(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              mid_ = input.readInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.polytech.spik.protocol.SpikMessages.Status value = com.polytech.spik.protocol.SpikMessages.Status.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                status_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static StatusChanged getDefaultInstance() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.polytech.spik.protocol.SpikMessages.internal_static_StatusChanged_descriptor;
    }

    public static com.polytech.spik.protocol.SpikMessages.StatusChanged parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.polytech.spik.protocol.SpikMessages.StatusChanged parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.StatusChanged parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.polytech.spik.protocol.SpikMessages.StatusChanged parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.StatusChanged parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static com.polytech.spik.protocol.SpikMessages.StatusChanged parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.StatusChanged parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }

    public static com.polytech.spik.protocol.SpikMessages.StatusChanged parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }

    public static com.polytech.spik.protocol.SpikMessages.StatusChanged parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static com.polytech.spik.protocol.SpikMessages.StatusChanged parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }

    public static Builder newBuilder(com.polytech.spik.protocol.SpikMessages.StatusChanged prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public StatusChanged getDefaultInstanceForType() {
      return defaultInstance;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.polytech.spik.protocol.SpikMessages.internal_static_StatusChanged_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.polytech.spik.protocol.SpikMessages.StatusChanged.class, com.polytech.spik.protocol.SpikMessages.StatusChanged.Builder.class);
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StatusChanged> getParserForType() {
      return PARSER;
    }

    /**
     * <code>required int64 mid = 1;</code>
     */
    public boolean hasMid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    /**
     * <code>required int64 mid = 1;</code>
     */
    public long getMid() {
      return mid_;
    }

    /**
     * <code>required .Status status = 2;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    /**
     * <code>required .Status status = 2;</code>
     */
    public com.polytech.spik.protocol.SpikMessages.Status getStatus() {
      return status_;
    }

    private void initFields() {
      mid_ = 0L;
      status_ = com.polytech.spik.protocol.SpikMessages.Status.SENDING;
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, mid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, status_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, mid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, status_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public Builder newBuilderForType() { return newBuilder(); }

    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     * Protobuf type {@code StatusChanged}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:StatusChanged)
        com.polytech.spik.protocol.SpikMessages.StatusChangedOrBuilder {
      private int bitField0_;
      private long mid_ ;
      private com.polytech.spik.protocol.SpikMessages.Status status_ = com.polytech.spik.protocol.SpikMessages.Status.SENDING;

      // Construct using com.polytech.spik.protocol.SpikMessages.StatusChanged.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.polytech.spik.protocol.SpikMessages.internal_static_StatusChanged_descriptor;
      }

      private static Builder create() {
        return new Builder();
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.polytech.spik.protocol.SpikMessages.internal_static_StatusChanged_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.polytech.spik.protocol.SpikMessages.StatusChanged.class, com.polytech.spik.protocol.SpikMessages.StatusChanged.Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        mid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = com.polytech.spik.protocol.SpikMessages.Status.SENDING;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.polytech.spik.protocol.SpikMessages.internal_static_StatusChanged_descriptor;
      }

      public com.polytech.spik.protocol.SpikMessages.StatusChanged getDefaultInstanceForType() {
        return com.polytech.spik.protocol.SpikMessages.StatusChanged.getDefaultInstance();
      }

      public com.polytech.spik.protocol.SpikMessages.StatusChanged build() {
        com.polytech.spik.protocol.SpikMessages.StatusChanged result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.polytech.spik.protocol.SpikMessages.StatusChanged buildPartial() {
        com.polytech.spik.protocol.SpikMessages.StatusChanged result = new com.polytech.spik.protocol.SpikMessages.StatusChanged(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mid_ = mid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.polytech.spik.protocol.SpikMessages.StatusChanged) {
          return mergeFrom((com.polytech.spik.protocol.SpikMessages.StatusChanged)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.polytech.spik.protocol.SpikMessages.StatusChanged other) {
        if (other == com.polytech.spik.protocol.SpikMessages.StatusChanged.getDefaultInstance()) return this;
        if (other.hasMid()) {
          setMid(other.getMid());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMid()) {

          return false;
        }
        if (!hasStatus()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.polytech.spik.protocol.SpikMessages.StatusChanged parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.polytech.spik.protocol.SpikMessages.StatusChanged) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <code>required int64 mid = 1;</code>
       */
      public boolean hasMid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      /**
       * <code>required int64 mid = 1;</code>
       */
      public long getMid() {
        return mid_;
      }

      /**
       * <code>required int64 mid = 1;</code>
       */
      public Builder setMid(long value) {
        bitField0_ |= 0x00000001;
        mid_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>required int64 mid = 1;</code>
       */
      public Builder clearMid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mid_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <code>required .Status status = 2;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .Status status = 2;</code>
       */
      public com.polytech.spik.protocol.SpikMessages.Status getStatus() {
        return status_;
      }
      /**
       * <code>required .Status status = 2;</code>
       */
      public Builder setStatus(com.polytech.spik.protocol.SpikMessages.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .Status status = 2;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = com.polytech.spik.protocol.SpikMessages.Status.SENDING;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:StatusChanged)
    }

    // @@protoc_insertion_point(class_scope:StatusChanged)
  }

  // @@protoc_insertion_point(outer_class_scope)
}
